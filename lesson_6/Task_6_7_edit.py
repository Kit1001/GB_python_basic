"""Реализовать простую систему хранения данных о суммах продаж булочной.
Должно быть два скрипта с интерфейсом командной строки: для записи данных и для вывода на экран записанных данных.
При записи передавать из командной строки значение суммы продаж.
Для чтения данных реализовать в командной строке следующую логику:
-просто запуск скрипта — выводить все записи;
-запуск скрипта с одним параметром-числом — выводить все записи с номера, равного этому числу, до конца;
-запуск скрипта с двумя числами — выводить записи, начиная с номера, равного первому числу, по номер,
 равный второму числу, включительно.

Подумать, как избежать чтения всего файла при реализации второго и третьего случаев.
Данные хранить в файле bakery.csv в кодировке utf-8. Нумерация записей начинается с 1.

Добавить возможность редактирования данных при помощи отдельного скрипта: передаём ему номер записи и новое значение.
При этом файл не должен читаться целиком — обязательное требование.
Предусмотреть ситуацию, когда пользователь вводит номер записи, которой не существует.

Комментарий: Данные для скрипта хранятся в файле bakery.csv.
При вызове скрипта нужно указать номер строки и ее новое значение.
Замена значения в файле выполняется копией старого файла в новый (tmp001), в котором в нужной строке
записывается введенное пользователем значение, вместо его чтения из старого файла. После создания копии, если
нужная строка была найдена - старый файл удаляется, а tmp0001 переименовывается в bakery.csv.
Если нужная строка не нашлась - tmp001 удаляется и выводится сообщение для пользователя

Такой метод замены выбран, чтобы избежать проблем с затиранием остального файла,
если новое значение имеет размер в байтах больше, чем старое.
"""


from sys import argv
from os import remove, rename

if len(argv) == 3:
    input_line, input_value = argv[1:3]
else:
    print("Неверный ввод, введите номер записи и значение")
    exit()
tmp = open('tmp001', 'w', encoding='utf-8')

with open('bakery.csv', 'r+', encoding='utf-8') as f:
    counter = 1
    file_was_edited = False                 # Флаг используется, чтобы определить была ли найдена нужная строка
    for line in f:
        if counter == int(input_line):
            tmp.write(f'{input_value}\n')   # Если нужная строка найдена - записывается пользовательское значение
            file_was_edited = True          # Отмечаем это в флаге
            counter += 1
        else:
            tmp.write(line)
            counter += 1
    tmp.close()

# Сохраняем результат (или нет, если пользователем была указана несуществующая строка)
if file_was_edited:
    remove('bakery.csv')
    rename('tmp001', 'bakery.csv')
else:
    print("Вы указали несуществующий номер записи")
    remove('tmp001')
