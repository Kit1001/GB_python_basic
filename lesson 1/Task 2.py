"""
Создать список, состоящий из кубов нечётных чисел от 1 до 1000:
Вычислить сумму тех чисел из этого списка, сумма цифр которых делится нацело на 7. Например,
число «19 ^ 3 = 6859» будем включать в сумму, так как 6 + 8 + 5 + 9 = 28 – делится нацело на 7.
Внимание: использовать только арифметические операции!
К каждому элементу списка добавить 17 и заново вычислить сумму тех чисел из этого списка,
сумма цифр которых делится нацело на 7.
* Решить задачу под пунктом b, не создавая новый список.

"""

numbers = list(range(1, 1000, 2))                   # Создаем список из нечетных чисел от 1 до 1000
numbers = [number**3 for number in numbers]         # Возводим каждое число в списке в куб


def check_if_sum_of_digits_is_aliquot(number):      # Создаем функцию для проверки
    sum_of = 0                                      # кратна ли сумма цифр числа 7
    while number // 10 != 0 or number % 10 != 0:
        sum_of = sum_of + number % 10
        number = number // 10
    return True if sum_of % 7 == 0 else False


# Вычисляем и выводим сумму чисел, сумма цифр которых кратна 7
sum_of_numbers_1 = sum([number for number in numbers if check_if_sum_of_digits_is_aliquot(number)])
print("Результат для подзадания А: ", sum_of_numbers_1)

# Добавляем к каждому элементу в списке 17 и вычисляем новую сумму чисел, сумма цифр которых кратна 7,
# не создавая нового списка и не меняя старый
sum_of_numbers_2 = sum([number + 17 for number in numbers if check_if_sum_of_digits_is_aliquot(number + 17)])
print("Результат для подзадания B: ", sum_of_numbers_2)